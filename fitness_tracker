import tkinter as tk
from tkinter import messagebox
from tkinter import filedialog

class Workout:
    def __init__(self, date, exercise_type, duration, calories_burned):
        self.date = date
        self.exercise_type = exercise_type
        self.duration = duration
        self.calories_burned = calories_burned

    def __str__(self):
        return f"{self.date}: {self.exercise_type} for {self.duration} minutes, {self.calories_burned} calories burned"

class User:
    def __init__(self, name, age, weight):
        self.name = name
        self.age = age
        self.weight = weight
        self.workouts = []

    def add_workout(self, workout):
        self.workouts.append(workout)

    def view_workouts(self):
        return "\n".join(str(workout) for workout in self.workouts)

    def save_data(self, filename):
        with open(filename, 'w') as file:
            for workout in self.workouts:
                file.write(f"{workout.date},{workout.exercise_type},{workout.duration},{workout.calories_burned}\n")

    def load_data(self, filename):
        with open(filename, 'r') as file:
            for line in file:
                date, exercise_type, duration, calories_burned = line.strip().split(',')
                workout = Workout(date, exercise_type, int(duration), int(calories_burned))
                self.workouts.append(workout)

class FitnessTrackerApp:
    def __init__(self, root):
        self.root = root
        self.root.title("Fitness Tracker")
        self.root.configure(bg="#e0f7fa")

        self.user = None

        self.name_label = tk.Label(root, text="Name:", bg="#e0f7fa", fg="#00796b", font=("Helvetica", 14, "bold"))
        self.name_label.pack(pady=5)
        self.name_entry = tk.Entry(root, font=("Helvetica", 14))
        self.name_entry.pack(pady=5)

        self.age_label = tk.Label(root, text="Age:", bg="#e0f7fa", fg="#00796b", font=("Helvetica", 14, "bold"))
        self.age_label.pack(pady=5)
        self.age_entry = tk.Entry(root, font=("Helvetica", 14))
        self.age_entry.pack(pady=5)

        self.weight_label = tk.Label(root, text="Weight:", bg="#e0f7fa", fg="#00796b", font=("Helvetica", 14, "bold"))
        self.weight_label.pack(pady=5)
        self.weight_entry = tk.Entry(root, font=("Helvetica", 14))
        self.weight_entry.pack(pady=5)

        self.create_user_button = tk.Button(root, text="Create User", command=self.create_user, bg="#4CAF50", fg="white", font=("Helvetica", 14, "bold"))
        self.create_user_button.pack(pady=10)

        self.add_workout_button = tk.Button(root, text="Add Workout", command=self.add_workout, bg="#2196F3", fg="white", font=("Helvetica", 14, "bold"))
        self.add_workout_button.pack(pady=10)

        self.view_workouts_button = tk.Button(root, text="View Workouts", command=self.view_workouts, bg="#FF9800", fg="white", font=("Helvetica", 14, "bold"))
        self.view_workouts_button.pack(pady=10)

        self.save_data_button = tk.Button(root, text="Save Data", command=self.save_data, bg="#9C27B0", fg="white", font=("Helvetica", 14, "bold"))
        self.save_data_button.pack(pady=10)

        self.load_data_button = tk.Button(root, text="Load Data", command=self.load_data, bg="#E91E63", fg="white", font=("Helvetica", 14, "bold"))
        self.load_data_button.pack(pady=10)

    def create_user(self):
        name = self.name_entry.get()
        age = int(self.age_entry.get())
        weight = float(self.weight_entry.get())
        self.user = User(name, age, weight)
        messagebox.showinfo("Info", "User created successfully!")

    def add_workout(self):
        if not self.user:
            messagebox.showwarning("Warning", "Please create a user first.")
            return

        date = tk.simpledialog.askstring("Input", "Enter the date (YYYY-MM-DD):")
        exercise_type = tk.simpledialog.askstring("Input", "Enter the exercise type:")
        duration = tk.simpledialog.askinteger("Input", "Enter the duration (minutes):")
        calories_burned = tk.simpledialog.askinteger("Input", "Enter the calories burned:")

        workout = Workout(date, exercise_type, duration, calories_burned)
        self.user.add_workout(workout)
        messagebox.showinfo("Info", "Workout added successfully!")

    def view_workouts(self):
        if not self.user:
            messagebox.showwarning("Warning", "Please create a user first.")
            return

        workouts = self.user.view_workouts()
        messagebox.showinfo("Workouts", workouts)

    def save_data(self):
        if not self.user:
            messagebox.showwarning("Warning", "Please create a user first.")
            return

        filename = filedialog.asksaveasfilename(defaultextension=".txt", filetypes=[("Text files", "*.txt")])
        if filename:
            self.user.save_data(filename)
            messagebox.showinfo("Info", "Data saved successfully!")

    def load_data(self):
        if not self.user:
            messagebox.showwarning("Warning", "Please create a user first.")
            return

        filename = filedialog.askopenfilename(filetypes=[("Text files", "*.txt")])
        if filename:
            self.user.load_data(filename)
            messagebox.showinfo("Info", "Data loaded successfully!")

if __name__ == "__main__":
    root = tk.Tk()
    app = FitnessTrackerApp(root)
    root.mainloop()